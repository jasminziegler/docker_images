### Multistage build

### GPU background here
# https://gitlab.com/nvidia/container-images/cuda/blob/master/dist/ubuntu16.04/10.2/base/Dockerfile
# https://gitlab.com/nvidia/container-images/cuda/blob/master/dist/ubuntu18.04/10.2/base/Dockerfile
# https://gitlab.com/nvidia/container-images/cuda/blob/master/dist/ubuntu18.04/10.2/runtime/Dockerfile
# https://github.com/microsoft/LightGBM/blob/master/docker/gpu/dockerfile.gpu
# https://hub.docker.com/r/rocker/cuda/dockerfile


## Stage compile: compile lightgbm and xgboost here
FROM rocker/cuda-dev:3.6.1 AS compile
# https://hub.docker.com/r/rocker/cuda-dev/dockerfile

# install prerequisites
RUN apt-get update && apt-get install -y --no-install-recommends \
    libboost-dev \
    libboost-system-dev \
    libboost-filesystem-dev
RUN rm -rf /var/lib/apt/lists/*

# install latest cmake (> 3.12 required for compiling of latest xgboost)
RUN wget -O cmake.tar.gz https://github.com/Kitware/CMake/releases/download/v3.15.2/cmake-3.15.2.tar.gz && \
    tar -zxvf cmake.tar.gz && \
    mv cmake-* cmake/ && \
    cd cmake && \
    ./bootstrap && \
    make && \
    make install
RUN rm -rf cmake && rm -rf cmake.tar.gz

# precompile lightgbm GPU
# https://lightgbm.readthedocs.io/en/latest/GPU-Tutorial.html
ENV OPENCL_LIBRARIES /usr/local/cuda/lib64
ENV OPENCL_INCLUDE_DIR /usr/local/cuda/include

# Install lightgbm
RUN git clone --recursive --branch stable --depth 1 https://github.com/microsoft/LightGBM && \
    cd LightGBM && \
    mkdir build && \
    cd build && \
    cmake -DUSE_GPU=ON -DOpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so -DOpenCL_INCLUDE_DIR=/usr/local/cuda/include/ .. && \
    make OPENCL_HEADERS=/usr/local/${CUDA_HOME}/targets/x86_64-linux/include LIBOPENCL=/usr/local/${CUDA_HOME}/targets/x86_64-linux/lib

# Install lightgbm R package 
RUN cd LightGBM && \
    sed -i -e 's/use_gpu <- FALSE/use_gpu <- TRUE/g' R-package/src/install.libs.R && \
    # R_PACKAGE_SOURCE <- "\/LightGBM\/R-package\/" is necessary, because the default settings are searching in some temp folder for the precompiled lib_lightgbm.so
    sed -i -e 's/use_precompile <- FALSE/use_precompile <- TRUE; R_PACKAGE_SOURCE <- "\/LightGBM\/R-package\/";/g' R-package/src/install.libs.R && \
    Rscript build_r.R

# install xgboost r package
# https://hub.docker.com/r/rocker/ml-gpu/dockerfile 
# tag v0.82 is latest GPU-compilable tag with rocker images
RUN git clone --recursive -b v0.82 https://github.com/dmlc/xgboost && \
    mkdir -p xgboost/build && \
    cd xgboost/build && \
    cmake .. -DUSE_CUDA=ON -DR_LIB=ON -DUSE_NCCL=ON && \
    make install -j$(nproc)
